name: Build Workflow

on:
  push:
#    branches: master

jobs:
  build-windows:
    permissions: write-all
    runs-on: windows-2019
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Install Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.12.10'
          architecture: 'x64'
      - name: Install requirements
        run: |
          pip install -r requirements.txt
      - name: Run PyInstaller
        run: |
          python -m PyInstaller ip-ping.spec
      - uses: actions/upload-artifact@v4.6.2
        with:
          name: Windows_app
          path: dist/ip-ping.exe

      - name: Get next tag version
        id: tag
        run: |
          latest_tag=$(git tag --sort=-v:refname | head -n 1)
          echo "Latest tag: $latest_tag"
          if [[ "$latest_tag" =~ ^v([0-9]+)\.([0-9]+)\.([0-9]+)$ ]]; then
            major=${BASH_REMATCH[1]}
            minor=${BASH_REMATCH[2]}
            patch=${BASH_REMATCH[3]}
            new_tag="v$major.$minor.$((patch + 1))"
          else
            new_tag="v1.0.0"
          fi
          echo "New tag: $new_tag"
          echo "tag=$new_tag" >> $GITHUB_OUTPUT
        
      - name: Create release Asset
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          release_name: ${{ steps.tag.outputs.tag }}
          body: |
            Test Release v1.0.0
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{steps.create_release.outputs.upload_url}}
          asset_path: dist/ip-ping.exe
          asset_name: ip-ping.exe
          asset_content_type: application/zip
